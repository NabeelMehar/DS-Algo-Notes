//https://practice.geeksforgeeks.org/problems/fractional-knapsack-1587115620/1#

class SortByWeight implements Comparator<Item>{
    
    public int compare(Item a ,Item b){
        
        double vala=(double)a.value/(double)a.weight;
        double valb=(double)b.value/(double)b.weight;
        
        if(vala > valb){
            return 1;
        }else if(vala == valb){
            return 0;
        }else{
            return -1;
        }
    }
    
}

class Solution
{
    double fractionalKnapsack(int cap, Item arr[], int n) 
    {
        Arrays.sort(arr ,new SortByWeight());
        return fracKnap(n ,cap ,arr);
    }
    
    public static double fracKnap(int n ,int cap ,Item[] arr){
        
        if(n==0){
            return 0.0;
        }
        
        if(arr[n-1].weight>cap){
        return  ((double)arr[n-1].value/(double)arr[n-1].weight)*(double)cap;
        }
        
        return (double)arr[n-1].value+(double)fracKnap(n-1 ,cap-arr[n-1].weight ,arr);
    }
}