
//https://www.pepcoding.com/resources/online-java-foundation/dynamic-programming-and-greedy/climb-stairs-official/ojquestion#

import java.io.*;
import java.util.*;

public class Main {

    public static void main(String[] args) throws Exception {
        
        Scanner sn=new Scanner(System.in);
        int n=sn.nextInt();
        int[] dp=new int[n+1];
        Arrays.fill(dp ,-1);
        System.out.println(getPaths(n ,dp));
    }
    
    public static int getPaths(int n ,int[] dp){
        
        if(n==0){
            return 1;
        }
        
        if(dp[n]!=-1){
            return dp[n];
        }
        
        int v1=0;
        int v2=0;
        int v3=0;
        
        if(n-1>=0){
             v1=getPaths(n-1 ,dp);
        }
        
        if(n-2>=0){
            v2=getPaths(n-2 ,dp);
        }
        
        if(n-3>=0){
             v3=getPaths(n-3 ,dp);
        }
        return dp[n]=v1+v2+ v3;
        
    }

}