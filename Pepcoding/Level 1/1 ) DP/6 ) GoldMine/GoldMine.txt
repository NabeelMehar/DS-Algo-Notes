
//https://www.pepcoding.com/resources/online-java-foundation/dynamic-programming-and-greedy/goldmine-official/ojquestion#

import java.io.*;
import java.util.*;

public class Main {

    public static void main(String[] args) throws Exception {
        
        Scanner sn=new Scanner(System.in);
        
        int n=sn.nextInt();
        int m=sn.nextInt();
        
        int[][] arr=new int[n][m];
        
        for(int i=0 ;i<arr.length ;i++){
         for(int j=0 ;j<arr[0].length ;j++){
            arr[i][j]=sn.nextInt();
         }   
        }
        
        
        int maxGold=Integer.MIN_VALUE;
        
        int dp[][]=new int[n+1][m+1];
        
        for(int[] a :dp){
            Arrays.fill(a ,-1);
        }
        
        for(int i=0 ;i<arr.length ;i++){
            maxGold=Math.max(maxGold ,findMaxGold(i ,arr[0].length-1 ,arr ,dp));
        }
        
        System.out.println(maxGold);
        
    }
    
    public static int findMaxGold(int i ,int j ,int[][] arr ,int[][] dp){
        
        if(j==0){
            return arr[i][j];
        }
        
        if(dp[i][j]!=-1){
            return dp[i][j];
        }
        
        int d1=Integer.MIN_VALUE;
        int d2=Integer.MIN_VALUE;
        int d3=Integer.MIN_VALUE;
        
        
        if(i-1>=0 && j-1>=0){
            d1=findMaxGold(i-1 ,j-1,arr ,dp)+arr[i][j];
        }
        
        if(i>=0 && j-1>=0){
            d2=findMaxGold(i ,j-1,arr ,dp)+arr[i][j];
        }
        
        if(i+1<arr.length && j-1>=0){
            d3=findMaxGold(i+1 ,j-1,arr ,dp)+arr[i][j];
        }
        
        return dp[i][j]=Math.max(d1 ,Math.max(d2 ,d3));
    }

}