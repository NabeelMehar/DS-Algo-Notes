
//https://www.pepcoding.com/resources/online-java-foundation/stacks-and-queues/infix-conversions-official/ojquestion

import java.io.*;
import java.util.*;

public class Main{
  

public static void main(String[] args) throws Exception {
    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    String exp = br.readLine();
    
    
    Stack<String> post=new Stack();
    Stack<String> pre=new Stack();
    Stack<Character> oprnd=new Stack();
    
    for(int i=0;i<exp.length();i++){
        
        char ch=exp.charAt(i);
        
        if(ch>=97 && ch<=122) {
            
            post.push(ch+"");
            pre.push(ch+"");
            
        }else if(ch=='('){
            
            oprnd.push(ch);
            
        }else if(ch==')'){
            
            while(oprnd.peek()!='('){
                
                char op=oprnd.pop();
                String d2=post.pop();
                String d1=post.pop();
                post.push(d1+d2+op);
                
                String pd2=pre.pop();
                String pd1=pre.pop();
                pre.push(""+op+pd1+pd2);
                
            }
            
            oprnd.pop();
            
        }else if(ch=='+' || ch=='-' || ch=='*' || ch=='/'){
            
            while(oprnd.size()>0 
            && precedence(oprnd.peek())>=precedence(ch)
            && oprnd.peek()!='('){
                
                char op=oprnd.pop();
                String d2=post.pop();
                String d1=post.pop();
                post.push(d1+d2+op);
                
                String pd2=pre.pop();
                String pd1=pre.pop();
                pre.push(""+op+pd1+pd2);
                
            }
            
            oprnd.push(ch);
            
            
        }
    
    }
    
    while(oprnd.size()>0){
        
        char op=oprnd.pop();
        String d2=post.pop();
        String d1=post.pop();
        post.push(d1+d2+op);
        
        String pd2=pre.pop();
        String pd1=pre.pop();
        pre.push(""+op+pd1+pd2);

    }
    
    System.out.println(post.peek());
    System.out.println(pre.peek());
    
    
    
 }
 
 
 public static int precedence(char ch){
     
     if(ch=='+' || ch=='-'){
         return 1;
     }else{
         return 2;
     }
     
 }
 
}