
//https://www.pepcoding.com/resources/online-java-foundation/stacks-and-queues/merge-overlapping-interval-official/ojquestion

import java.io.*;
import java.util.*;

public class Main {

    public static void main(String[] args) throws Exception {
        // write your code here
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int n = Integer.parseInt(br.readLine());
        int[][] arr = new int[n][2];

        for (int j = 0; j < n; j++) {
            String line = br.readLine();
            arr[j][0] = Integer.parseInt(line.split(" ")[0]);
            arr[j][1] = Integer.parseInt(line.split(" ")[1]);
        }

        mergeOverlappingIntervals(arr);
    }
    
    static class Pair implements Comparable<Pair>{
        
        int st;
        int et;
        
        public Pair(int st ,int et){
            this.st=st;
            this.et=et;
        }
        
        public int compareTo(Pair ot){
            return st-ot.st;
        }
        
    }

    public static void mergeOverlappingIntervals(int[][] arr) {
        
        Pair[] pa=new Pair[arr.length];
        
        Stack<Pair> st=new Stack();
        
        
        for(int i=0;i<arr.length;i++){
            pa[i]=new Pair(arr[i][0] ,arr[i][1]);
        }
        
        Arrays.sort(pa);
        
        st.push(pa[0]);
        
        for(int i=0;i<pa.length;i++){
            
            Pair pp=st.pop();
            Pair cp=pa[i];
            
            if(cp.st<=pp.et){
                int net=Math.max(cp.et ,pp.et);
                pp.et=net;
                st.push(pp);
            }else{
                st.push(pp);
                st.push(cp);
            }
        }
        
        
        int ts=st.size();
        int j=st.size()-1;
        
        while(!st.isEmpty()){
            Pair p=st.pop();
            pa[j]=p;
            j--;
        }
        
        for(int i=0;i<ts;i++){
            System.out.println(pa[i].st+" "+pa[i].et);
        }
        
       
        
        
    }

}