
//https://www.pepcoding.com/resources/online-java-foundation/stacks-and-queues/lah-official/ojquestion

public static void main(String[] args) throws Exception {
    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

    int n = Integer.parseInt(br.readLine());
    int[] a = new int[n];
    for(int i = 0; i < n; i++){
       a[i] = Integer.parseInt(br.readLine());
    }

    
    int[] rge=new int[n];
    
    Stack<Integer> st=new Stack();
    
    st.push(a.length-1);
    rge[a.length-1]=n;
    
    for(int i=a.length-2;i>=0;i--){
        
        int ce=a[i];
        
        while(!st.isEmpty() && a[st.peek()]>=ce){
            st.pop();
        }
        
        if(st.isEmpty()){
            rge[i]=n;
        }else{
            rge[i]=st.peek();
        }
        
        st.push(i);

    }
    
    int[] lge=new int[n];
    
    Stack<Integer> lst=new Stack();
    
    st.push(0);
    lge[0]=-1;
    
    for(int i=1;i<a.length;i++){
        
        int ce=a[i];
        
        while(!lst.isEmpty() && a[lst.peek()]>=ce){
            lst.pop();
        }
        
        if(lst.isEmpty()){
            lge[i]=-1;
        }else{
            lge[i]=lst.peek();
        }
        
        lst.push(i);

    }
    
    int maxArea=Integer.MIN_VALUE;
    
    for(int i=0;i<a.length;i++){
        
        int len=(rge[i]-lge[i])-1;
        int area=a[i]*len;
        
        maxArea=Math.max(area ,maxArea);
    }
    
    System.out.println(maxArea);
    
    
    
 }
}