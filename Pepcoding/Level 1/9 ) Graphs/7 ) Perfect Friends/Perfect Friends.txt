//https://www.pepcoding.com/resources/online-java-foundation/graphs/perfect-friends-official/ojquestion

import java.io.*;
import java.util.*;

public class Main {
    
    public static class Edge{
        int wt;
        int nbr;
        int src;
        
        Edge(int wt ,int src ,int nbr ){
            this.wt=wt;
            this.nbr=nbr;
            this.src=src;
        }
    }
   
   public static void main(String[] args) throws Exception {
      
      Scanner sn=new Scanner(System.in);
      int n = sn.nextInt();
      int k = sn.nextInt();
      ArrayList<Edge>[] graph=new ArrayList[n];
      
      for(int i=0;i<n;i++){
          graph[i]=new ArrayList<Edge>();
      }
      
      for(int i=0;i<k;i++){
          
          int e1=sn.nextInt();
          int e2=sn.nextInt();
          
          Edge ne=new Edge(0 ,e1 ,e2);
          Edge ne2=new Edge(0 ,e2 ,e1);
          
          graph[e1].add(ne);
          graph[e2].add(ne2);
          
      }
     
      ArrayList<Integer> nsic =new ArrayList();
      boolean[] visited=new boolean[n];
      
      for(int i=0;i<graph.length;i++){
          if(!visited[i]){
              int c=countNSIC(i ,graph ,0 ,visited);
              nsic.add(c);
          }
      }
      
      int tc=0;
      
      for(int i=0;i<nsic.size()-1;i++){
       for(int j=i+1;j<nsic.size();j++){
          tc+=nsic.get(i)*nsic.get(j);
       }   
      }
      
      System.out.println(tc);
      
   }
   
   public static int countNSIC(int src ,ArrayList<Edge>[] graph ,int c , boolean[] visited){
       
       visited[src]=true;
       
       for(Edge e : graph[src]){
           if(!visited[e.nbr]){
               return countNSIC(e.nbr ,graph ,c+1 ,visited);
           }
       }
       
       return c+1;
   }

}