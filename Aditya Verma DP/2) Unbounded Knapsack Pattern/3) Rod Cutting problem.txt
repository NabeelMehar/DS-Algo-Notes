//GFG

//https://practice.geeksforgeeks.org/problems/rod-cutting0840/1#


class Solution{
    public int cutRod(int price[], int n) {
        
        int[] alen=new int[n];
        
        for(int i=0;i<n;i++){
            alen[i]=i+1;
        }
        
        int[][] dp=new int[n+1][n+1];
        
        return cutr(price ,alen ,n ,n ,dp);
        
    }
    
    public static int cutr(int[] price ,int[] alen ,int rp ,int n ,int[][] dp){
        
        
        if(n==0 || rp==0 ){
            return 0;
        }
        
        if(dp[n][rp]!=0){
            return dp[n][rp];
        }
        
        if(alen[n-1] <= rp){
            return dp[n][rp]=Math.max(price[n-1]+cutr(price ,alen,rp-alen[n-1] ,n ,dp) , cutr(price  ,alen , rp ,n-1 ,dp));
        }else{
            return dp[n][rp]=cutr(price ,alen,rp ,n-1 ,dp);
        }
        
    }
    
}