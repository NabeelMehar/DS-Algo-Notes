//Pepcoding
// https://www.pepcoding.com/resources/online-java-foundation/dynamic-programming-and-greedy/unbounded-knapsack-official/ojquestion

import java.io.*;
	import java.util.*;

	public class Main {

	    public static void main(String[] args) throws Exception {
	        
	        Scanner sn=new Scanner(System.in);
	        
	        int n=sn.nextInt();
	        
	        int[] pro=new int[n];
	        
	        for(int i=0;i<n;i++){
	         pro[i]=sn.nextInt();   
	        }
	        
	        int[] weight=new int[n];
	        
	        for(int i=0;i<n;i++){
	         weight[i]=sn.nextInt();   
	        }
	        
	        int w=sn.nextInt();
	        
	        
	        int[][] dp=new int[n+1][w+1];
	        
	        
	        for(int i=0;i<dp.length ;i++){
	            for(int j=0;j<dp[0].length ;j++){
	                
	                if(i==0 || j==0){
	                    
	                    dp[i][j]=0;
	                    
	                }else if(weight[i-1] <= j){
	                    
	                    dp[i][j]=Math.max(pro[i-1]+dp[i][j-weight[i-1]],dp[i-1][j]);
	                }else{
	                    dp[i][j]=dp[i-1][j];
	                }
	            }
	        }
	        
	        System.out.println(dp[n][w]);

	    }
	}