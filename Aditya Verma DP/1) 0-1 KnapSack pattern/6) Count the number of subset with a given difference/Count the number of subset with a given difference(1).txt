// GFG

import java.util.*;

class GFG {
	public static void main (String[] args) {
		
		Scanner sn=new Scanner(System.in);
		
		int n=sn.nextInt();
		
		int arr[]=new int[n];
		
		for(int i=0;i<n;i++){
		    arr[i]=sn.nextInt();
		}
		
		int tar=sn.nextInt();
		
		int ts=0;
		
		for(int i=0;i<arr.length ;i++){
		    ts+=arr[i];
		}
		
		
		
		tar=tar+ts;
		
		if(tar%2!=0){
		    System.out.println("0");
		    return;
		}
		
		tar/=2;
		
		int[][] dp=new int[arr.length+1][tar+1];
		
		for(int i=0 ; i<dp.length ;i++){
		 for(int j=0 ; j<dp[0].length ;j++){
		    dp[i][j]=-1;
		 }   
		}
		
		System.out.println(countdiff(arr ,arr.length ,tar ,dp));

		
	}
	
	
	
	public static int countdiff(int[] arr ,int n ,int tar ,int[][] dp){
	    
	    if(tar==0){
	        return 1;
	    }
	    
	    if(n==0){
	        return 0;
	    }
	    
	    if(dp[n][tar]!=-1){
	        return dp[n][tar];
	    }
	    
	    if(arr[n-1] <= tar){
	        
	        return dp[n][tar]=countdiff(arr ,n-1 ,tar-arr[n-1] ,dp)+countdiff(arr ,n-1 ,tar ,dp);
	        
	    }else{
	        return dp[n][tar]=countdiff(arr ,n-1 ,tar ,dp);
	    }
	    
	}
	
	
	

}