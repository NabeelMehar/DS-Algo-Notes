
//GFG

//https://practice.geeksforgeeks.org/problems/shortest-common-supersequence0322/1#

class Solution
{
    //Function to find length of shortest common supersequence of two strings.
    public static int shortestCommonSupersequence(String s1,String s2,int l1,int l2)
    {
        
        int dp[][]=new int[l1+1][l2+1];
        
        for(int i=0 ;i<dp.length;i++){
         for(int j=0 ;j<dp[0].length;j++){
            dp[i][j]=-1;
         }   
        }
        
        
        for(int i=0 ;i<dp.length ;i++){
         for(int j=0 ;j<dp[0].length ;j++){
            
            if(i==0 || j==0){
                if(i!=0){
                    
                    dp[i][j]=i;
                    
                }else if(j!=0){
                    
                    dp[i][j]=j;
                    
                }else{
                    dp[i][j]=0;
                }
            }else if(s1.charAt(i-1)==s2.charAt(j-1)){
                
                dp[i][j]=1+dp[i-1][j-1];
                
            }else{
                
                int val1=1+dp[i-1][j];
                int val2=1+dp[i][j-1];
                
                dp[i][j]=Math.min(val1 , val2);
            }
            
         }   
        }
        
        return dp[l1][l2];
        // return findSub(s1 ,s2 ,l1 ,l2 ,dp);
    }
    
    public static int findSub(String s1,String s2,int l1,int l2 ,int[][] dp)
    {
        if(l1==0 || l2==0){
            if(l1!=0){
                return l1;
            }else if(l2!=0){
                return l2;
            }else{
                return 0;
            }
        }
        
        if(dp[l1][l2]!=-1){
            return dp[l1][l2];
        }
        
        if(s1.charAt(l1-1)==s2.charAt(l2-1)){
            return dp[l1][l2]=1+findSub(s1 ,s2 ,l1-1 ,l2-1 ,dp);
        }else{
            
            int v1=1+findSub(s1 ,s2 ,l1-1 ,l2 ,dp);
            int v2=1+findSub(s1 ,s2 ,l1 ,l2-1 ,dp);
            
            return dp[l1][l2]=Math.min(v1 ,v2);
        }
    }
}